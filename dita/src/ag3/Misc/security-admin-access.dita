<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_pgw_k2h_14">
  <title>Encrypted admin access</title>
  <shortdesc>Encrypted administrator access provides access using Secure Socket Layer (SSL)
    authentication. Enterprise Edition only.</shortdesc>
  <body>
    
    <p>The encrypted communication allows a connection to be configured for security using Secure Sockets Layer (SSL) encryption. 
      Encryption protects data-in-flight from a remote machines to a Couchbase cluster using SSL. 
      A secure channel is established between the remote machine and the server.</p>
    
    <p>The server generates a self-signed certification for the initial node which is propagated
      throughout the server nodes in the cluster. If the self-signed certificate is regenerated or
      updated, the certificate must be obtained again before secure server communication is
      re-established. The secure connection is on the cluster-level (rather than bucket-level) and
      is through the dedicated HTTPS REST port, 18091 or the HTTPS CAPI port, 18092. </p>
    
    <p>Encrypted administrator access is used under a variety of situations: 
      
      <ul>
        <li>An administrator is physically located in a different data center.</li>
        <li>An administrator is outside of the firewall.</li>
        <li>An additional level of security is required.</li>  
      </ul></p>
    
    <p>Secure administrative access is configured using the same method used for encrypted client-server communication:</p>
    
    <ol>
      <li>Connect to the server through an unencrypted port, 8091 REST HTTP or 8092 CAPI HTTP.</li>
      <li>Retrieve the SSL self-signed certificate and store in a local file, for example,
          <codeph>clusterCertificate</codeph>.</li>
      <li>Connect to the server through an encrypted port, 18091 REST HTTP or 18092 CAPI HTTP to
        communicate with server node on a secure channel. </li>
    </ol>
    
    <example><title>SSL certificate</title>
      <codeblock>-----BEGIN CERTIFICATE-----
MIIC/jCCAeigAwIBAgIIE3jc9BofgigwCwYJKoZIhvcNAQEFMCQxIjAgBgNVBAMT
GUNvdWNoYmFzZSBTZXJ2ZXIgOTRmYTE3YTUwHhcNMTMwMTAxMDAwMDAwWhcNNDkx
MjMxMjM1OTU5WjAkMSIwIAYDVQQDExlDb3VjaGJhc2UgU2VydmVyIDk0ZmExN2E1
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxaaXsKm06xxzzYqejDAO
3qW1x6vLz9jcLdZkNQgxGk4+/ulrfK4PSLHARf4vml8Ev3bcOzCwfyDCp2/TCSX0
qDTn4iBRp9CJtxVyY/xqWkYkld+GGtj28P0CtZ1UKOHCRB7KInzxesxITg/a0vsL
M8GrcwFpmZEJjeY7HGdUuBRcoMfm2Yn28drmr92SNSsz+npdfEFkQloYStqemOOG
h1Jn7ldU5rBj/B2zcvh6guDXKKz/bMMeCTX84BmkG3rmiKQwxyizuxtYi5u1BthC
X3aO58lC9uRMja1lA5TrJnZOCRT24G6VTh2bYhN98W6YmvF9l4ESDR4I7nE8E6Gt
eQIDAQABozgwNjAOBgNVHQ8BAf8EBAMCAKQwEwYDVR0lBAwwCgYIKwYBBQUHAwEw
DwYDVR0TAQH/BAUwAwEB/zALBgkqhkiG9w0BAQUDggEBAF0Bz2MpQoBEdOdDRix3
j0/XGKjH7kI5zDFiOlUvANMeErVZf9kM8xqS7Yd3bCa2rjT1Y8BM3Sciurtrd/Cy
iTVzpXjQOR/K1AFtiBtuNb2Hx5SXvgeW4p4uNmK74u1UUNmAyb3mwSQ+duuqK/Ef
D4wTolPTZP5gcricyWI3qUCi3pTeCz/2jcAWn3DI4KVtlAsOy9sFFo4RxBDgmOuS
klUAb8eu4e2XxcLJ++geYoum0VIKa3ygjpZ800PupwZZetjD8/6tfbYFuoBTXL+r
27M9ArsOxkVbh3fDQ8b8qnr5sam1P7IfSzqq/Lq4vjh1mvred62zuJlMvY9KmNJU
rqw=
-----END CERTIFICATE-----</codeblock>
    </example>
    
    <section><title>Using the Web Console for encrypted access</title>
      <p>The certificate is obtained in a variety of methods depending on your preference and the operating system. 
        Either use REST or the Web Console to retrieve the certificate and store in a file. 
        With the Web Console, copy certificate from <uicontrol>Settings > Certificate > Show certificate</uicontrol> and paste into a file.</p>
        
      
    </section>
    
    <section><title>Using REST for encrypted access</title>
      <p>The <codeph>GET /pools/default/certificate</codeph> REST API HTTP method and URI retrieves the SSL self-signed certificate from the cluster.</p>
      
      
    

    
    
    <title>Syntax for retrieving the certificate</title>
      <codeblock>curl â€“X GET  -u adminName:adminPassword
    http://localHost:Port/pools/default/certificate > ./&lt;certificate_name>     
    </codeblock>

    <title>Retrieving the certificate</title>
      <p>The following examples use curl and wget to retrieve the certificat</p>
      <codeblock>curl http://10.5.2.54:8091/pools/default/certificate > clusterCertificate</codeblock>
      <codeblock>wget http://10.5.2.54:8091/pools/default/certificate -O clusterCertificate</codeblock>

    <title>Retrieving data with encryption</title>
      <p>The following examples use <codeph>curl</codeph> and <codeph>wget</codeph> with the SSL certificate to retrieve cluster information over an encrypted connection. 
      The port used is the encrypted REST port, <codeph>18091</codeph></p>
    
    <codeblock>curl --cacert clusterCertificate https://10.5.2.54:18091/pools/default</codeblock>
    <codeblock>wget --ca-certificate clusterCertificate  https://10.5.2.54:18091/pools/default -O output</codeblock>
      
    
      
    </section>
   
    
    
  </body>
</topic>
